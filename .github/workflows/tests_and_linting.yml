# Automatic testing of susi.
# See https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests and Linting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: "*"

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install .
    - name: List of installed packages
      run: |
        pip list
    - name: Test with pytest
      if: ${{ matrix.python-version != '3.9' }}
      run: |
        pytest --nbval
    - name: Test with pytest and Codecov
      if: ${{ matrix.python-version == '3.9' }}
      run: |
        pip install pytest-cov
        pytest --nbval  --cov=susi --cov-report=xml --cov-config .coveragerc
    - name: Upload coverage to Codecov
      if: ${{ matrix.python-version == '3.9' }}
      uses: codecov/codecov-action@v1
      with:
        verbose: true

  linting:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install .
    - name: List of installed packages
      run: |
        pip list
    - name: Lint with flake8 (with stopping)
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Lint with flake8 (without stopping)
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
